(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{363:function(t,a,s){"use strict";s.r(a);var e=s(42),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),s("h2",{attrs:{id:"描述字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#描述字符"}},[t._v("#")]),t._v(" 描述字符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("元字符")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v(".")]),t._v(" "),s("td",[t._v("查找单个字符，除了换行和行结束符")])]),t._v(" "),s("tr",[s("td",[t._v("\\w")]),t._v(" "),s("td",[t._v("查找单词字符")])]),t._v(" "),s("tr",[s("td",[t._v("\\W")]),t._v(" "),s("td",[t._v("查找非单词字符")])]),t._v(" "),s("tr",[s("td",[t._v("\\d")]),t._v(" "),s("td",[t._v("查找数字")])]),t._v(" "),s("tr",[s("td",[t._v("\\D")]),t._v(" "),s("td",[t._v("查找非数字字符")])]),t._v(" "),s("tr",[s("td",[t._v("\\s")]),t._v(" "),s("td",[t._v("查找空白字符")])]),t._v(" "),s("tr",[s("td",[t._v("\\S")]),t._v(" "),s("td",[t._v("查找非空白字符")])]),t._v(" "),s("tr",[s("td",[t._v("\\b")]),t._v(" "),s("td",[t._v("匹配一个边界，它包括字与空格之间的位置，以及目标字符串开始和结束位置")])]),t._v(" "),s("tr",[s("td",[t._v("\\B")]),t._v(" "),s("td",[t._v("匹配非单词边界")])]),t._v(" "),s("tr",[s("td",[t._v("\\n")]),t._v(" "),s("td",[t._v("查找换行符")])]),t._v(" "),s("tr",[s("td",[t._v("\\f")]),t._v(" "),s("td",[t._v("查找换页符")])]),t._v(" "),s("tr",[s("td",[t._v("\\r")]),t._v(" "),s("td",[t._v("回车符")])]),t._v(" "),s("tr",[s("td",[t._v("\\t")]),t._v(" "),s("td",[t._v("制表符")])]),t._v(" "),s("tr",[s("td",[t._v("\\v")]),t._v(" "),s("td",[t._v("垂直制表符")])]),t._v(" "),s("tr",[s("td",[t._v("\\xxx")]),t._v(" "),s("td",[t._v("查找以八进制数 xxxx 规定的字符")])]),t._v(" "),s("tr",[s("td",[t._v("\\xdd")]),t._v(" "),s("td",[t._v("查找以十六进制数 dd 规定的字符")])]),t._v(" "),s("tr",[s("td",[t._v("\\uxxx")]),t._v(" "),s("td",[t._v("查找以十六进制 xxxx规定的 Unicode 字符")])])])]),t._v(" "),s("ol",[s("li",[t._v("若要匹配a可以用  \\x61  a得ASCII码为97转换为8进制为61  即正则表达式为  /\\x61/")]),t._v(" "),s("li",[t._v("若用八进制表达则为/\\141/")]),t._v(" "),s("li",[t._v("16进制Unicode则为/\\u0061/")])]),t._v(" "),s("h2",{attrs:{id:"描述字符范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#描述字符范围"}},[t._v("#")]),t._v(" 描述字符范围")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("元字符")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("[abc]")]),t._v(" "),s("td",[t._v("a b c之中得任意一个")])]),t._v(" "),s("tr",[s("td",[t._v("[^abc]")]),t._v(" "),s("td",[t._v("查找不再括号中得任意一个")])]),t._v(" "),s("tr",[s("td",[t._v("[0-9]")]),t._v(" "),s("td",[t._v("0到9")])]),t._v(" "),s("tr",[s("td",[t._v("[a-z]")]),t._v(" "),s("td",[t._v("a到z")])]),t._v(" "),s("tr",[s("td",[t._v("[A-Z]")]),t._v(" "),s("td",[t._v("A到Z")])]),t._v(" "),s("tr",[s("td",[t._v("[A-z]")]),t._v(" "),s("td",[t._v("A到Z和a到z")])]),t._v(" "),s("tr",[s("td",[t._v("a｜b")]),t._v(" "),s("td",[t._v("两个子模式的匹配结果中任选一个")])])])]),t._v(" "),s("ol",[s("li",[t._v("可以匹配ASXCII码")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[\\u0000-\\u00ff]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("可以混用各种字符模式")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[abce-z]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符a、b、c，以及从e~z之间的任意字符")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("在中括号内不要有空格，否则会误解为还要匹配空格")]),t._v(" "),s("li",[t._v("字符范围可以组合使用，以便设计更灵活的匹配模式")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("ab[c-g][1-7]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//前两个字符为ab，第三个字符为从c到g，第四个字符为1~7的任意数字")]),t._v("\n")])])]),s("ol",{attrs:{start:"5"}},[s("li")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(abc)|(efg)|(123)|(456)")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\n")])])]),s("p",[t._v("在多个子模式之间加入选择操作符")]),t._v(" "),s("h2",{attrs:{id:"重复匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重复匹配"}},[t._v("#")]),t._v(" 重复匹配")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("量词")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("n+")]),t._v(" "),s("td",[t._v("匹配任何包含至少一个 n 的字符串")])]),t._v(" "),s("tr",[s("td",[t._v("n*")]),t._v(" "),s("td",[t._v("匹配任何包含零个或多个 n 的字符串")])]),t._v(" "),s("tr",[s("td",[t._v("n?")]),t._v(" "),s("td",[t._v("匹配任何包含零个或一个 n 的字符串")])]),t._v(" "),s("tr",[s("td",[t._v("n{x}")]),t._v(" "),s("td",[t._v("匹配包含 x 个 n 的序列的字符串")])]),t._v(" "),s("tr",[s("td",[t._v("n{x,y}")]),t._v(" "),s("td",[t._v("匹配包含最少 x 个、最多 y 个 n 的序列的字符串")])]),t._v(" "),s("tr",[s("td",[t._v("n{x,}")]),t._v(" "),s("td",[t._v("匹配包含至少 x 个 n 的序列的字符串")])])])]),t._v(" "),s("p",[t._v("注意：该重复匹配只匹配前一个字符 若需匹配多个字符需添加()")]),t._v(" "),s("h3",{attrs:{id:"惰性匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#惰性匹配"}},[t._v("#")]),t._v(" 惰性匹配")]),t._v(" "),s("p",[t._v("重复类量词都具有贪婪性，在条件允许的前提下，会匹配尽可能多的字符。\n?、{n} 和 {n,m} 重复类具有弱贪婪性，表现为贪婪的有限性。\n*、+ 和 {n,} 重复类具有强贪婪性，表现为贪婪的无限性。")]),t._v(" "),s("ol",[s("li",[t._v("越是排在左侧的重复类量词匹配优先级越高。会保证右边重复性量词最低匹配次数的基础上尽可能的去多匹配左边的重复性量词\n例子：/[a-z]"),s("em",[t._v("[a-z]")]),t._v("/ 优先保证右边最低次数匹配 最低次数匹配为0所以会匹配右边0次 然后尽可能地去匹配左边")]),t._v(" "),s("li",[t._v("与贪婪匹配相反，惰性匹配将遵循另一种算法：在满足条件的前提下，尽可能少的匹配字符。定义惰性匹配的方法：在重复类量词后面添加问号?限制词。")]),t._v(" "),s("li",[t._v("贪婪匹配体现了最大化匹配原则，惰性匹配则体现最小化匹配原则。")]),t._v(" "),s("li",[t._v("惰性匹配例子：\n{n,m}?：尽量匹配 n 次，但是为了满足限定条件也可能最多重复 m 次。\n{n}?：尽量匹配 n 次。\n{n,}?：尽量匹配 n 次，但是为了满足限定条件也可能匹配任意次。\n??：尽量匹配，但是为了满足限定条件也可能最多匹配 1 次，相当于 {0,1}?。\n+?：尽量匹配 1 次，但是为了满足限定条件也可能匹配任意次，相当于 {1,}?。\n*? ：尽量不匹配，但是为了满足限定条件也可能匹配任意次，相当于 {0,}?。")])]),t._v(" "),s("h2",{attrs:{id:"边界量词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#边界量词"}},[t._v("#")]),t._v(" 边界量词")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("量词")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("^")]),t._v(" "),s("td",[t._v("匹配开头")])]),t._v(" "),s("tr",[s("td",[t._v("$")]),t._v(" "),s("td",[t._v("匹配结尾")])])])]),t._v(" "),s("h2",{attrs:{id:"子表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#子表达式"}},[t._v("#")]),t._v(" 子表达式")]),t._v(" "),s("p",[t._v("使用小括号可以对字符模式进行任意分组，在小括号内的字符串表示子表达式，也称为子模式。子表达式具有独立的匹配功能，保存独立的匹配结果；同时，小括号后的量词将会作用于整个子表达式。")]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(\\w+)=(\\d*)")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),t._v("\n")])])]),s("h2",{attrs:{id:"反向引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反向引用"}},[t._v("#")]),t._v(" 反向引用")]),t._v(" "),s("p",[t._v("在字符模式中，后面的字符可以引用前面的子表达式。实现方法如下")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\\"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("数字\n")])])]),s("p",[t._v("数字代表的是子表达式在字符模式中的顺序。如 '\\1' 引用的是第1个子表达式 '\\2'表示第二个")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(\\w)(\\w)(\\w)\\2\\3\\1\\3\\2\\1")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"断言写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#断言写法"}},[t._v("#")]),t._v(" 断言写法")]),t._v(" "),s("h3",{attrs:{id:"前瞻断言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前瞻断言"}},[t._v("#")]),t._v(" 前瞻断言")]),t._v(" "),s("p",[t._v("(?=exp) 顺序肯定环视，表示所在位置右侧能够匹配exp")]),t._v(" "),s("p",[t._v("example：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'这是例子ddd123啊啊啊'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\D+(?=\\d)")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("会匹配123数字之前的字段（这是例子ddd）")]),t._v(" "),s("p",[t._v("(?!exp) 顺序否定环视，表示所在位置右侧不能匹配exp")]),t._v(" "),s("h3",{attrs:{id:"后瞻断言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后瞻断言"}},[t._v("#")]),t._v(" 后瞻断言")]),t._v(" "),s("p",[t._v("(?<=exp) 逆序肯定环视，表示所在位置左侧能够匹配exp")]),t._v(" "),s("p",[t._v("example：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'这是例子ddd123啊啊啊'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(?<=\\d)\\D+")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("p",[t._v("会匹配123数字之后的字段（啊啊啊）")]),t._v(" "),s("p",[t._v("(?<!exp) 逆序否定环视，表示所在位置左侧不能匹配exp")]),t._v(" "),s("h2",{attrs:{id:"正则表达式性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式性能"}},[t._v("#")]),t._v(" 正则表达式性能")]),t._v(" "),s("h3",{attrs:{id:"工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[t._v("#")]),t._v(" 工作原理")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("浏览器验证正则表达式对象，把它转换成原生代码程序，把正则对象赋值给一个变量")])]),t._v(" "),s("li",[s("p",[t._v("设置起始位置，从头开始搜索")])]),t._v(" "),s("li",[s("p",[t._v("逐个检查文本和正则模式，当一个特定的字元匹配失败是，回溯到之前尝试匹配的位置，尝试其他可能的路径")])]),t._v(" "),s("li",[s("p",[t._v("若匹配成功，则返回匹配成功，若到最后一个字符串未成功，则返回匹配失败")])]),t._v(" "),s("li",[s("p",[t._v("用test方法比exec方法快上一倍左右")])])]),t._v(" "),s("h3",{attrs:{id:"优化方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化方法"}},[t._v("#")]),t._v(" 优化方法")]),t._v(" "),s("p",[t._v("回溯是性能消耗所在，旨在减少回溯")]),t._v(" "),s("ol",[s("li",[t._v("在开始选择头开始搜索时，通过早期预测跳过一些不必要的工作（例：正则表达式以^开头）")]),t._v(" "),s("li",[t._v("可以用字符串操作完成的就用不要用正则")]),t._v(" "),s("li",[t._v("使用模拟原子组(向前查看+反向引用)：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\\s\\"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("head"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("<html>(?=([\\s\\S]*?<head>))\\1(?=([\\s\\S]*?<\\/head>))\\2(?=([\\s\\S]*?<body>))\\3(?=([\\s\\S]*?<\\/body>))\\4[\\s\\S]*?<\\/html>")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\n")])])]),s("hr"),t._v(" "),s("h2",{attrs:{id:"参考链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),s("p",[t._v("http://c.biancheng.net/view/5632.html （基础，有各个知识点)")]),t._v(" "),s("p",[t._v("https://blog.csdn.net/example440982/article/details/85177133/ (解释断言)")]),t._v(" "),s("p",[t._v("https://www.cnblogs.com/wyhlightstar/p/10233457.html （提升正则性能）")])])}),[],!1,null,null,null);a.default=r.exports}}]);